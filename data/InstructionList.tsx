/* =============================================================================
 * File:   List.tsx
 * Author: Cole Tobin
 * =============================================================================
 * Copyright (c) 2022 Cole Tobin
 *
 * This file is part of Arch86.
 *
 * Arch86 is free software: you can redistribute it and/or modify it under the
 *   terms of the GNU Affero General Public License as published by the Free
 *   Software Foundation, either version 3 of the License, or (at your option)
 *   any later version.
 *
 * Arch86 is distributed in the hope that it will be useful, but WITHOUT ANY
 *   WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 *   FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for
 *   more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 *   along with Arch86. If not, see <http://www.gnu.org/licenses/>.
 * =============================================================================
 */

import MaybeArray from "@myTypes/MaybeArray";
import Titles from "@data/InstructionTitles";

const InstructionList: Record<string, MaybeArray<keyof typeof Titles>[]> = {
    a: [
        "aaa",
        "aad",
        "aam",
        "aas",
        "adc",
        "adcx",
        "add",
        ["addList", "addps", "addpd", "addss", "addsd"],
        ["addsubList", "addsubps", "addsubpd"],
        "adox",
        ["aesdecList", "aesdec", "aesdeclast"],
        ["aesdecklList", "aesdec128kl", "aesdec256kl"],
        ["aesdecwideklList", "aesdecwide128kl", "aesdecwide256kl"],
        ["aesencList", "aesenc", "aesenclast"],
        ["aesencklList", "aesenc128kl", "aesenc256kl"],
        ["aesencwideklList", "aesencwide128kl", "aesencwide256kl"],
        "aesimc",
        "aeskeygenassist",
        "and",
        ["andList", "andps", "andpd"],
        "andn",
        ["andnList", "andnps", "andnpd"],
        "arpl",
    ],
    b: [
        "bextr",
        "blcfill",
        "blci",
        "blcic",
        "blcmsk",
        "blcs",
        ["blendList", "blendps", "blendpd"],
        ["blendvList", "blendvps", "blendvpd"],
        "blsfill",
        "blsi",
        "blsic",
        "blsmsk",
        "blsr",
        "bndcl",
        "bndcu-bndcn",
        "bndldx",
        "bndmk",
        "bndmov",
        "bndstx",
        "bound",
        "bsf",
        "bsr",
        "bswap",
        "bt",
        "btc",
        "btr",
        "bts",
        "bzhi",
    ],
    c: [
        "call",
        "cbw-cwde-cdqe",
        "clac",
        "clc",
        "cld",
        "cldemote",
        "clflush",
        "clflushopt",
        "clgi",
        "cli",
        "clrssbsy",
        "clts",
        "clui",
        "clwb",
        "cmc",
        "cmovcc",
        "cmp",
        ["cmpList", "cmpps", "cmppd", "cmpss", "cmpsd"],
        "cmps",
        "cmpxchg",
        "cmpxchg8b-cmpxchg16b",
        ["comiList", "comiss", "comisd"],
        "cpuid",
        "crc32",
        ["cvtdqList", "cvtdq2ps", "cvtdq2pd"],
        ["cvtpdList", "cvtpd2dq", "cvtpd2pi", "cvtpd2ps"],
        ["cvtpiList", "cvtpi2ps", "cvtpi2pd"],
        ["cvtpsList", "cvtps2dq", "cvtps2pd", "cvtps2pi"],
        ["cvtsdList", "cvtsd2si", "cvtsd2ss"],
        ["cvtsiList", "cvtsi2ss", "cvtsi2sd"],
        ["cvtssList", "cvtss2sd", "cvtss2si"],
        ["cvttpdList", "cvttpd2dq", "cvttpd2pi"],
        ["cvttpsList", "cvttps2dq", "cvttps2pi"],
        "cvttsd2si",
        "cvttss2si",
        "cwd-cdq-cqo",
    ],
    d: [
        "daa",
        "das",
        "dec",
        "div",
        ["divList", "divps", "divpd", "divss", "divsd"],
        ["dpList", "dppd", "dpps"],
    ],
    e: [
        "emms",
        "encodekey128",
        "encodekey256",
        "endbr32",
        "endbr64",
        "enter",
        "enqcmd",
        "enqcmds",
        "extractps",
        "extrq",
    ],
    f: [
        "f2xm1",
        "fabs",
        "fadd",
        // "fbld",
        // "fbstp",
        // "fchs",
        // "fclex",
        // "fcmovcc",
        // "fcom",
        // "fcomi",
        // "fcos",
        // "fdecstp",
        // "fdiv",
        // "fdivr",
        // "ffree",
        // "ficom",
        // "fild",
        // "fincstp",
        // "finit",
        // "fist",
        // "fisttp",
        // "fld",
        // "fldx",
        // "fldcw",
        // "fldenv",
        // "fmul",
        // "fnop",
        // "fpatan",
        // "fprem",
        // "fprem1",
        // "fptan",
        // "frndint",
        // "frstor",
        // "fsave",
        // "fscale",
        // "fsin",
        // "fsincos",
        // "fsqrt",
        // "fst",
        // "fstcw",
        // "fstenv",
        // "fstsw",
        // "fsub",
        // "fsubr",
        // "ftst",
        // "fucom",
        // "fxam",
        // "fxch",
        // "fxsave",
        // "fxtract",
        // "fyl2x",
        // "fyl2xp1",
    ],
    // g: [
    //     "gf2p8affineqb",
    //     "gf2p8affineinvqb",
    //     "gf2p8mulb",
    // ],
    // h: [
    //     ["haddList", "haddpd", "haddps"],
    //     "hlt",
    //     "hreset",
    //     ["hsubList", "hsubpd", "hsubps"],
    // ],
    // i: [
    //     "idiv",
    //     "imul",
    //     "in",
    //     "inc",
    //     "incsspd-incsspq",
    //     "ins",
    //     "insertps",
    //     "int",
    //     "invd",
    //     "invlpg",
    //     "invpcid",
    //     "iret",
    // ],
    // j: [
    //     "jcc",
    //     "jmp",
    // ],
    // k: [
    //     "kaddn",
    //     "kandn",
    //     "kandnn",
    //     "kmovn",
    //     "knotn",
    //     "korn",
    //     "kortestn",
    //     "kshiftln",
    //     "kshiftrn",
    //     "ktestn",
    //     "kunpcknn",
    //     "kxnorn",
    //     "kxorn",
    // ],
    // l: [
    //     "lahf",
    //     "lar",
    //     "lddqu",
    //     "ldmxcsr",
    //     "lds-les-lfs-lgs-lss",
    //     "ldtilecfg",
    //     "lea",
    //     "leave",
    //     "lfence",
    //     "lgdt-lidt-lldt",
    //     "lmsw",
    //     "loadiwkey",
    //     "lods",
    //     "loop-loopcc",
    //     "lsl",
    //     "ltr",
    //     "lzcnt",
    // ],
    prefixes: [
        "lock",
    ]
};

export default InstructionList;
