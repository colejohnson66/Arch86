%YAML 1.2
---
map:
  # [00] is in extensions
  # [01] is in extensions
  02: [LAR, Gw, Ew]
  03: [LSL, Gw, Ew]
  # [04]
  05: [SYSCALL]
  06: [CLTS]
  07: [SYSRET]
  08: [INVD]
  09:
    NP: [WBINVD] # TODO: no prefix mentioned
    F3: [WBNOINVD]
  # [0A]
  0B: [UD2]
  # [0C]
  # [0D] is in extensions
  # [0E]
  # [0F]
  10:
    NP: [MOVUPS, Vpv, Wpv]
    66: [MOVUPD, Vpv, Wpv]
    F3: [MOVSS, Vpv, Wpv]
    F2: [MOVSD, Vpv, Wpv]
  11:
    NP: [MOVUPS, Wpv, Vpv]
    66: [MOVUPD, Wpv, Vpv]
    F3: [MOVSS, Wpv, Vpv]
    F2: [MOVSD, Wpv, Vpv]
  12:
    NP: [MOVHLPS, Vpv, Upv] # TODO: When used in mem form, it's MOVLPS_VpvMq
    66: [MOVLPD, Vpv, Mq]
    F3: [MOVSLDUP, Vpv, Wpv]
    F2: [MOVDDUP, Vpv, Wpv]
  13:
    66: [MOVLPD, Mq, Vpv]
  14:
    NP: [UNPCKLPS, Vpv, Wpv]
    66: [UNPCKLPD, Vpv, Wpv]
  15:
    NP: [UNPCKHPS, Vpv, Wpv]
    66: [UNPCKHPD, Vpv, Wpv]
  16:
    NP: [MOVHPS, Vpv, Mq] # TODO: When used in reg form, it's MOVLHPS_VpvUpv
    66: [MOVHPD, Vpv, Mq]
    F3: [MOVSHDUP, Vpv, Wpv]
  17:
    NP: [MOVHPS, Mq, Vpv]
    66: [MOVHPD, Mq, Vpv]
  # [18] is in extensions
  # TODO: [19] is reserved NOP???
  1A:
    NP: [BNDLDX, BGdq, M]
    66: [BNDMOV, BGdq, BEy]
    F3: [BNDCL, BGdq, Ey]
    F2: [BNDCU, BGdq, Ey]
  1B:
    NP: [BNDSTX, M, BGdq]
    66: [BNDMOV, BEy, BGdq]
    F3: [BNDMK, BGdq, My]
    F2: [BNDCN, BGdq, Ey]
  # [1C] is in extensions # TODO: Also reserved NOP???
  # TODO: [1D] is reserved NOP???
  # [1E] is in extensions # TODO: Also reserved NOP???
  # [1F] is in extensions
  20: [MOV, Ry, Cy]
  21: [MOV, Ry, Dy]
  22: [MOV, Cy, Ry]
  23: [MOV, Dy, Ry]
  24: [MOV, Ry, Ty] # TODO: undocumented
  # [25]
  26: [MOV, Ty, Ry] # TODO: undocumented
  # [27]
  28:
    NP: [MOVAPS, Vpv, Wpv]
    66: [MOVAPD, Vpv, Wpv]
  29:
    NP: [MOVAPS, Wpv, Vpv]
    66: [MOVAPD, Wpv, Vpv]
  2A:
    NP: [CVTPI2PS, Vpv, Qpi]
    66: [CVTPI2PD, Vpv, Qpi]
    F3: [CVTSI2SS, Vsv, Ey]
    F2: [CVTSI2SD, Vsv, Ey]
  2B:
    NP: [MOVNTPS, Mdq, Vpv]
    66: [MOVNTPD, Mdq, Vpv]
  2C:
    NP: [CVTTPS2PI, Ppi, Wpv]
    66: [CVTTPD2PI, Ppi, Wpv]
    F3: [CVTTSS2SI, Gy, Wsv]
    F2: [CVTTSD2SI, Gy, Wsv]
  2D:
    NP: [CVTPS2PI, Ppi, Wpv]
    66: [CVTPD2PI, Ppi, Wpv]
    F3: [CVTSS2SI, Gy, Wsv]
    F2: [CVTSD2SI, Gy, Wsv]
  2E:
    NP: [UCOMISS, Vsv, Wsv]
    66: [UCOMISD, Vsv, Wsv]
  2F:
    NP: [COMISS, Vpv, Wpv]
    66: [COMISD, Vpv, Wpv]
  30: [WRMSR]
  31: [RDTSC]
  32: [RDMSR]
  33: [RDPMC]
  34: [SYSENTER]
  35: [SYSEXIT]
  # [36]
  37:
    NP: [GETSEC]
  # [38] is three byte escape (`threeByte0F38.yaml`)
  # [39]
  # [3A] is three byte escape (`threeByte0F3A.yaml`)
  # [3B]
  # [3C]
  # [3D]
  # [3E]
  # [3F]
  # [40-4F] are in spans
  50:
    66: [MOVMSKPD, Gy, Vpv]
  51:
    NP: [SQRTPS, Vpv, Wpv]
    66: [SQRTPD, Vpv, Wpv]
    F3: [SQRTSS, Vsv, Wsv]
    F2: [SQRTSD, Vsv, Wsv]
  52:
    NP: [RSQRTPS, Vpv, Wpv]
    F3: [RSQRTSS, Vsv, Wsv]
  53:
    NP: [RCPPS, Vpv, Wpv]
    F3: [RCPSS, Vsv, Wsv]
  54:
    NP: [ANDPS, Vpv, Wpv]
    66: [ANDPD, Vpv, Wpv]
  55:
    NP: [ANDNPS, Vpv, Wpv]
    66: [ANDNPD, Vpv, Wpv]
  56:
    NP: [ORPS, Vpv, Wpv]
    66: [ORPD, Vpv, Wpv]
  57:
    NP: [XORPS, Vpv, Wpv]
    66: [XORPD, Vpv, Wpv]
  58:
    NP: [ADDPS, Vpv, Wpv]
    66: [ADDPD, Vpv, Wpv]
    F3: [ADDSS, Vsv, Wsv]
    F2: [ADDSD, Vsv, Wsv]
  59:
    NP: [MULPS, Vpv, Wpv]
    66: [MULPD, Vpv, Wpv]
    F3: [MULSS, Vsv, Wsv]
    F2: [MULSD, Vsv, Wsv]
  5A:
    NP: [CVTPS2PD, Vpv, Wpv]
    66: [CVTPD2PS, Vpv, Wpv]
    F3: [CVTSS2SD, Vpv, Wsv]
    F2: [CVTSD2SS, Vpv, Wsv]
  5B:
    NP: [CVTDQ2PS, Vpv, Wpv]
    66: [CVTPS2DQ, Vpv, Wpv]
    F3: [CVTTPS2DQ, Vpv, Wpv]
    F2:
  5C:
    NP: [SUBPS, Vpv, Wpv]
    66: [SUBPD, Vpv, Wpv]
    F3: [SUBSS, Vsv, Wsv]
    F2: [SUBSD, Vsv, Wsv]
  5D:
    NP: [MINPS, Vpv, Wpv]
    66: [MINPD, Vpv, Wpv]
    F3: [MINSS, Vsv, Wsv]
    F2: [MINSD, Vsv, Wsv]
  5E:
    NP: [DIVPS, Vpv, Wpv]
    66: [DIVPD, Vpv, Wpv]
    F3: [DIVSS, Vsv, Wsv]
    F2: [DIVSD, Vsv, Wsv]
  5F:
    NP: [MAXPS, Vpv, Wpv]
    66: [MAXPD, Vpv, Wpv]
    F3: [MAXSS, Vsv, Wsv]
    F2: [MAXSD, Vsv, Wsv]
  60:
    NP: [PUNPCKLBW, Ppi, Qpi]
    66: [PUNPCKLBW, Vpv, Wpv]
  61:
    NP: [PUNPCKLWD, Ppi, Qpi]
    66: [PUNPCKLWD, Vpv, Wpv]
  62:
    NP: [PUNPCKLDQ, Ppi, Qpi]
    66: [PUNPCKLDQ, Vpv, Wpv]
  63:
    NP: [PACKSSWB, Ppi, Qpi]
    66: [PACKSSWB, Vpv, Wpv]
  64:
    NP: [PCMPGTB, Ppi, Qpi]
    66: [PCMPGTB, Vpv, Wpv]
  65:
    NP: [PCMPGTW, Ppi, Qpi]
    66: [PCMPGTW, Vpv, Wpv]
  66:
    NP: [PCMPGTD, Ppi, Qpi]
    66: [PCMPGTD, Vpv, Wpv]
  67:
    NP: [PACKUSWB, Ppi, Qpi]
    66: [PACKUSWB, Vpv, Wpv]
  68:
    NP: [PUNPCKHBW, Ppi, Qpi]
    66: [PUNPCKHBW, Vpv, Wpv]
  69:
    NP: [PUNPCKHWD, Ppi, Qpi]
    66: [PUNPCKHWD, Vpv, Wpv]
  6A:
    NP: [PUNPCKHDQ, Ppi, Qpi]
    66: [PUNPCKHDQ, Vpv, Wpv]
  6B:
    NP: [PACKSSDW, Ppi, Qpi]
    66: [PACKSSDW, Vpv, Wpv]
  6C:
    66: [PUNPCKLQDQ, Vpv, Wpv]
  6D:
    66: [PUNPCKHQDQ, Vpv, Wpv]
  6E:
    NP: [MOVD, Ppi, Ey] # TODO: MOVQ for 64 bit opsize
    66: [MOVD, Vpv, Ey]
  6F:
    NP: [MOVQ, Ppi, Qpi]
    66: [MOVDQA, Vpv, Wpv]
    F3: [MOVDQU, Vpv, Wpv]
  70:
    NP: [PSHUFW, Ppi, Qpi, Ib]
    66: [PSHUFD, Vpv, Wpv, Ib]
    F3: [PSHUFHW, Vpv, Wpv, Ib]
    F2: [PSHUFLW, Vpv, Wpv, Ib]
  # [71] is in extensions
  # [72] is in extensions
  # [73] is in extensions
  74:
    NP: [PCMPEQB, Ppi, Qpi]
    66: [PCMPEQB, Vpv, Wpv]
  75:
    NP: [PCMPEQW, Ppi, Qpi]
    66: [PCMPEQW, Vpv, Wpv]
  76:
    NP: [PCMPEQD, Ppi, Qpi]
    66: [PCMPEQD, Vpv, Wpv]
  77:
    NP: [EMMS]
  # TODO: [78] is VMREAD
  # TODO: [79] is VMWRITE
  # [7A]
  # [7B]
  7C:
    66: [HADDPD, Vpv, Wpv]
    F2: [HADDPS, Vpv, Wpv]
  7D:
    66: [HSUBPD, Vpv, Wpv]
    F2: [HSUBPS, Vpv, Wpv]
  7E:
    NP: [MOVD, Ey, Ppi] # TODO: MOVQ for 64 bit opsize
    66: [MOVD, Ey, Vpv]
    F3: [MOVQ, Vpv, Wpv]
  7F:
    NP: [MOVQ, Qpi, Ppi]
    66: [MOVDQA, Wpv, Vpv]
    F3: [MOVDQU, Wpv, Vpv]
  # [80-8F] are in spans
  # [90-9F] are in spans
  A0: [PUSH, FS]
  A1: [POP, FS]
  A2: [CPUID]
  A3: [BT, Ev, Gv]
  A4: [SHLD, Ev, Gv, Ib]
  A5: [SHLD, Ev, Gv, CL]
  # [A6]
  # [A7]
  A8: [PUSH, GS]
  A9: [POP, GS]
  AA: [RSM]
  AB: [BTS, Ev, Gv]
  AC: [SHRD, Ev, Gv, Ib]
  AD: [SHRD, Ev, Gv, CL]
  # [AE] is in extensions
  AF: [IMUL, Gv, Ev]
  B0: [CMPXCHG, Eb, Gb]
  B1: [CMPXCHG, Ev, Gv]
  B2: [LSS, Sv, Mp]
  B3: [BTR, Ev, Gv]
  B4: [LFS, Sv, Mp]
  B5: [LGS, Sv, Mp]
  B6: [MOVZX, Gv, Eb]
  B7: [MOVZX, Gy, Ew]
  B8:
    F3: [POPCNT, Gv, Ev]
  B9: [UD1, Gd, Ed]
  # [BA] is in extensions
  BB: [BTC, Ev, Gv]
  BC:
    NP: [BSF, Gv, Ev] # TODO: no prefix listed
    F3: [TZCNT, Gv, Ev]
  BD:
    N/A: [BSR, Gv, Ey] # TODO: BSR is not the same as LZCNT, but LZCNT will execute
    F3: [LZCNT, Gv, Ey] # as BSR if LZCNT isn't supported
  BE: [MOVSX, Gv, Eb]
  BF: [MOVSX, Gv, Ev]
  C0: [XADD, Eb, Gb]
  C1: [XADD, Ev, Gv]
  C2:
    NP: [CMPPS, Vpv, Wpv, Ib]
    66: [CMPPD, Vpv, Wpv, Ib]
    F3: [CMPSS, Vsv, Wsv, Ib]
    F2: [CMPSD, Vsv, Wsv, Ib]
  C3:
    NP: [MOVNTI, My, Gy]
  C4:
    NP: [PINSRW, Ppi, Ew, Ib]
    66: [PINSRW, Vpv, Ew, Ib]
  C5:
    NP: [PEXTRW, Gv, Npi, Ib]
    66: [PEXTRW, Gv, Upv, Ib]
  C6:
    NP: [SHUFPS, Vpv, Wpv, Ib]
    66: [SHUFPD, Vpv, Wpv, Ib]
  # [C7] is in extensions
  # [C8-CF] are in spans
  D0:
    66: [ADDSUBPD, Vpv, Wpv]
    F2: [ADDSUBPS, Vpv, Wpv]
  D1:
    NP: [PSRLW, Ppi, Qpi]
    66: [PSRLW, Vpv, Wpv]
  D2:
    NP: [PSRLD, Ppi, Qpi]
    66: [PSRLD, Vpv, Wpv]
  D3:
    NP: [PSRLQ, Ppi, Qpi]
    66: [PSRLQ, Vpv, Wpv]
  D4:
    NP: [PADDQ, Ppi, Qpi]
    66: [PADDQ, Vpv, Wpv]
  D5:
    NP: [PMULLW, Ppi, Qpi]
    66: [PMULLW, Vpv, Wpv]
  D6:
    F3: [MOVQ2DQ, Vpv, Npi]
    F2: [MOVDQ2Q, Ppi, Upv]
  D7:
    NP: [MOVMSKB, Gy, Npi]
    66: [MOVMSKB, Gy, Upv]
  D8:
    NP: [PSUBUSB, Ppi, Qpi]
    66: [PSUBUSB, Vpv, Wpv]
  D9:
    NP: [PSUBUSW, Ppi, Qpi]
    66: [PSUBUSW, Vpv, Wpv]
  DA:
    NP: [PMINUB, Ppi, Qpi]
    66: [PMINUB, Vpv, Wpv]
  DB:
    NP: [PAND, Ppi, Qpi]
    66: [PAND, Vpv, Wpv]
  DC:
    NP: [PADDUSB, Ppi, Qpi]
    66: [PADDUSB, Vpv, Wpv]
  DD:
    NP: [PADDUSW, Ppi, Qpi]
    66: [PADDUSW, Vpv, Wpv]
  DE:
    NP: [PMAXUB, Ppi, Qpi]
    66: [PMAXUB, Vpv, Wpv]
  DF:
    NP: [PANDN, Ppi, Qpi]
    66: [PANDN, Vpv, Wpv]
  E0:
    NP: [PAVGB, Ppi, Qpi]
    66: [PAVGB, Vpv, Wpv]
  E1:
    NP: [PSRAW, Ppi, Qpi]
    66: [PSRAW, Vpv, Wpv]
  E2:
    NP: [PSRAD, Ppi, Qpi]
    66: [PSRAD, Vpv, Wpv]
  E3:
    NP: [PAVGW, Ppi, Qpi]
    66: [PAVGW, Vpv, Wpv]
  E4:
    NP: [PMULHUW, Ppi, Qpi]
    66: [PMULHUW, Vpv, Wpv]
  E5:
    NP: [PMULHW, Ppi, Qpi]
    66: [PMULHW, Vpv, Wpv]
  E6:
    66: [CVTTPD2DQ, Vpv, Wpv]
    F3: [CVTDQ2PD, Vpv, Wpv]
    F2: [CVTPD2DQ, Vpv, Wpv]
  E7:
    NP: [MOVNTQ, Mq, Ppi]
    66: [MOVNTDQ, Mdqq, Vpv]
  E8:
    NP: [PSUBSB, Ppi, Qpi]
    66: [PSUBSB, Vpv, Wpv]
  E9:
    NP: [PSUBSW, Ppi, Qpi]
    66: [PSUBSW, Vpv, Wpv]
  EA:
    NP: [PMINSW, Ppi, Qpi]
    66: [PMINSW, Vpv, Wpv]
  EB:
    NP: [POR, Ppi, Qpi]
    66: [POR, Vpv, Wpv]
  EC:
    NP: [PADDSB, Ppi, Qpi]
    66: [PADDSB, Vpv, Wpv]
  ED:
    NP: [PADDSW, Ppi, Qpi]
    66: [PADDSW, Vpv, Wpv]
  EE:
    NP: [PMAXSW, Ppi, Qpi]
    66: [PMAXSW, Vpv, Wpv]
  EF:
    NP: [PXOR, Ppi, Qpi]
    66: [PXOR, Vpv, Wpv]
  F0:
    F2: [LDDQU, Vpv, M]
  F1:
    NP: [PSLLW, Ppi, Qpi]
    66: [PSLLW, Vpv, Wpv]
  F2:
    NP: [PSLLD, Ppi, Qpi]
    66: [PSLLD, Vpv, Wpv]
  F3:
    NP: [PSLLQ, Ppi, Qpi]
    66: [PSLLQ, Vpv, Wpv]
  F4:
    NP: [PMULUDQ, Ppi, Qpi]
    66: [PMULUDQ, Vpv, Wpv]
  F5:
    NP: [PMADDWD, Ppi, Qpi]
    66: [PMADDWD, Vpv, Wpv]
  F6:
    NP: [PSADBW, Ppi, Qpi]
    66: [PSADBW, Vpv, Wpv]
  F7:
    NP: [MASKMOVQ, Ppi, Qpi]
    66: [MASKMOVDQU, Vpv, Upv]
  F8:
    NP: [PSUBB, Ppi, Qpi]
    66: [PSUBB, Vpv, Wpv]
  F9:
    NP: [PSUBW, Ppi, Qpi]
    66: [PSUBW, Vpv, Wpv]
  FA:
    NP: [PSUBD, Ppi, Qpi]
    66: [PSUBD, Vpv, Wpv]
  FB:
    NP: [PSUBQ, Ppi, Qpi]
    66: [PSUBQ, Vpv, Wpv]
  FC:
    NP: [PADDB, Ppi, Qpi]
    66: [PADDB, Vpv, Wpv]
  FD:
    NP: [PADDW, Ppi, Qpi]
    66: [PADDW, Vpv, Wpv]
  FE:
    NP: [PADDD, Ppi, Qpi]
    66: [PADDD, Vpv, Wpv]
  FF: [UD0, Gd, Ed]
spans:
  40:
    length: 16
    instr: [CMOVcc, Gv, Ev]
  80:
    length: 16
    instr: [Jcc, Jv]
  90:
    length: 16
    instr: [SETcc, Eb]
  C8:
    length: 8
    instr: [BSWAP, Zy]
extensions:
  00:
    form: /r
    /0: [SLDT, Ew]
    /1: [STR, Ew]
    /2: [LLDT, Ew]
    /3: [LTR, Ew]
    /4: [VERR, Ew]
    /5: [VERW, Ew]
  01:
    form: m/r/b
    M/0/b: [SGDT, Ms]
    M/1/b: [SIDT, Ms]
    M/2/b: [LGDT, Ms]
    M/3/b: [LIDT, Ms]
    M/4/b: [SMSW, Ev]
    M/5/b: [RSTORSSP, Mq]
    M/6/b: [LMSW, Ew] # See also `R/6/b`
    M/7/b: [INVLPG, M]
    R/0/5: [PCONFIG]
    R/1/0: [MONITOR]
    R/1/1: [MWAIT]
    R/1/2: [CLAC]
    R/1/3: [STAC] # TODO: NP
    R/2/0: [XGETBV]
    R/2/1: [XSETBV]
    R/2/5: [XEND]
    R/2/6: [XTEST]
    R/5/0: [SETSSBSY]
    R/5/2: [SAVEPREVSSP]
    R/5/6: [RDPKRU] # TODO: NP
    R/5/7: [WRPKRU]
    R/6/b: [LMSW, Ew] # See also `M/6/b`
    R/7/0: [SWAPGS]
    R/7/1: [RDTSCP]
  0D:
    form: m/r
    M/1: [PREFETCHW, Mb]
    M/2: [PREFETCHWT1, Mb]
  18:
    form: m/r
    M/0: [PREFETCHNTA, Mb]
    M/1: [PREFETCH0, Mb]
    M/2: [PREFETCH1, Mb]
    M/3: [PREFETCH2, Mb]
  1C:
    form: pfx-m/r
    NP-M/0: [CLDEMOTE, Mb]
  1E:
    form: pfx-m/r/b
    F3-R/1/b: [RDSSPD, Gy] # TODO: RDSSPQ_Gy in 64 bit mode
    F3-R/7/2: [ENDBR64]
    F3-R/7/3: [ENDBR32]
  1F:
    form: pfx-/r
    NP-/0: [NOP, Ez]
  71:
    form: pfx-m/r
    NP-R/2: [PSRLW, Npi, Ib]
    NP-R/4: [PSRAW, Npi, Ib]
    NP-R/6: [PSLLW, Npi, Ib]
    66-R/2: [PSRLW, Upv, Ib]
    66-R/4: [PSRAW, Upv, Ib]
    66-R/6: [PSLLW, Upv, Ib]
  72:
    form: pfx-m/r
    NP-R/2: [PSRLD, Npi, Ib]
    NP-R/4: [PSRAD, Npi, Ib]
    NP-R/6: [PSLLD, Npi, Ib]
    66-R/2: [PSRLD, Upv, Ib]
    66-R/4: [PSRAD, Upv, Ib]
    66-R/6: [PSLLD, Upv, Ib]
  73:
    form: pfx-m/r
    NP-R/2: [PSRLD, Npi, Ib]
    NP-R/6: [PSLLQ, Npi, Ib]
    66-R/2: [PSRLD, Upv, Ib]
    66-R/3: [PSRLDQ, Upv, Ib]
    66-R/6: [PSLLQ, Upv, Ib]
    66-R/7: [PSLLDQ, Upv, Ib]
  AE:
    form: pfx-m/r/b
    NP-M/0/b: [FXSAVE, Mdqq]
    NP-M/1/b: [FXRSTOR, Mdqq]
    NP-M/2/b: [LDMXCSR, Md]
    NP-M/3/b: [STMXCSR, Md]
    NP-M/4/b: [XSAVE, M] # TODO: XSAVE64 for REX.W
    NP-M/5/b: [XRSTOR, M] # TODO: XRSTOR64 for REX.W
    NP-M/6/b: [XSAVEOPT, M] # TODO: XSAVEOPT64 for REX.W
    NP-M/7/b: [CLFLUSH, Mb]
    NP-R/5/0: [LFENCE]
    NP-R/6/0: [MFENCE]
    NP-R/7/0: [SFENCE]
    66-M/6/b: [CLWB, Mb]
    66-M/7/b: [CLFLUSHOPT, Mb] # TODO: Prefix is listed as [NFx 66 ...]
    66-R/6/b: [TPAUSE, Rd]
    F3-M/4/b: [PTWRITE, Ey] # See also `F3-R/4/b`
    F3-M/6/b: [CLRSSBSY, Mq]
    F3-R/0/b: [RDFSBASE, Ry]
    F3-R/1/b: [RDGSBASE, Ry]
    F3-R/2/b: [WRFSBASE, Ry]
    F3-R/3/b: [WRGSBASE, Ry]
    F3-R/4/b: [PTWRITE, Ey] # See also `F3-M/4/b`
    F3-R/5/b: [INCSSPD, Ry] # TODO: INCSSPQ for 64 bit operands
    F3-R/6/b: [UMONITOR, Ry]
    F2-R/6/b: [UMWAIT, Rd]
  BA:
    form: /r
    /4: [BT, Ev, Ib]
    /5: [BTS, Ev, Ib]
    /6: [BTR, Ev, Ib]
    /7: [BTC, Ev, Ib]
  C7:
    form: pfx-m/r
    xx-M/1: [CMPXCHG8B, Mq] # TODO: CMPXCHG16B_Mdq with REX prefix
    NP-M/3: [XRSTORS, M] # TODO: XRSTORS64 for REX.W
    NP-M/4: [XSAVEC, M] # TODO: XSAVEC64 for REX.W
    NP-M/5: [XSAVES, M] # TODO: XSAVES64 for REX.W
    NP-R/6: [RDRAND, Gv]
    NP-R/7: [RDSEED, Gv]
    66-R/6: [RDRAND, Gv]
    66-R/7: [RDSEED, Gv]
    F3-R/7: [RDPID, Ry]

notes:
  - LAR has a 32 bit form listed, but always operates in 16 bit form
  - >-
    LSL has 32 and 64 bit forms listed, but always operates in 16 bit form
    A REX.W prefix will turn this into "64" bit form, but the only difference will be zeroing the upper 32 bits in the destination
  - RDRAND/RDSEED have a `NFx` prefix
