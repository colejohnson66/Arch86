%YAML 1.2
---
title: ASCII Adjust \reg{AL} After Subtraction
opcode:
  - opcode: 3F
    mnemonic: AAS
    encoding: ZO
    validity:
      16: valid
      32: valid
      64: invalid
    description: ASCII adjust \reg{AL} after subtraction.
encoding:
  operands: 1
  encodings:
    ZO:
      - None
description: >-
  The \c{AAS} instruction converts the result of a subtraction of two BCD digits to a valid 2-digit BCD number.

  This instruction will not be useful unless it immediately follows an \instr{ADD} instruction using the \reg{AL} register and a single digit operand (either register or immediate).

  Traditionally, this instruction is "ASCII Adjust After Subtraction".
  This would lead one to believe that it works on ASCII digits (\c{030h} (\c{0}) through \c{039h} (\c{9})), however this would be incorrect.
  This instruction \i{actually} operates on BCD digits (\c{00h} (\c{0}) through \c{09h} (\c{9})).

  \canned{no64,invalid}
operation: |-
  public void AAS()
  {
    if ((AL & 0xF) > 9 || AF)
    {
      AX = AX - 6;
      AH = AH - 1;
    }
    AL = AL & 0xF;
  }
flags:
  CF: Set if an adjustment is made. Cleared otherwise.
  PF: Undefined.
  AF: Set if an adjustment is made. Cleared otherwise.
  ZF: Undefined.
  SF: Undefined.
  OF: Undefined.
exceptions:
  real:
    "#UD": \exception{lock}
  virtual:
    "#UD": \exception{lock}
  protected:
    "#UD": \exception{lock}
  compatibility:
    "#UD": \exception{lock}
  long:
    "#UD": \exception{in64}
